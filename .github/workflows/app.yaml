name: CI DE DEPLOY

on:
  push:
    branches: [ "develop" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3  
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Generate JWT secret
      run: php artisan jwt:secret
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Generate Swagger JSON
      run: php artisan l5-swagger:generate
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite 
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

    - name: Deploy Stack
      uses: kgierke/portainer-stack-deployment@v1
      with:
        portainer-url: "http://89.116.214.202:9000"
        portainer-username: ${{ secrets.REPO_USERNAME }}
        portainer-password: ${{ secrets.REPO_PASSWORD }}
        portainer-endpoint: 2
        name: stack-name
        file: ./docker-compose.yml
        variables: '{"image": "hello-world"}'
        
#    -
#      name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2
#      
#    -
#      name: Docker meta
#      id: meta
#      uses: docker/metadata-action@v4
#      with:
#        images: m1nnemi/back
#    -
#      name: Login to Docker Hub
#      uses: docker/login-action@v2
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#        
#    -
#      name: Build and push
#      uses: docker/build-push-action@v4
#      with:
#        context: .
#        file: ./Dockerfile
#        push: true
#        tags: ${{ secrets.DOCKERHUB_USERNAME }}/back:latest
